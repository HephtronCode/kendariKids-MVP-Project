/* src/index.css - FINAL TAILWIND v4 VERSION WITH ANIMATIONS */

@import "tailwindcss";

@layer base {
  /* Define ALL CSS variables for both light and dark mode here */
  :root {
    --background: oklch(1 0 0);
    --foreground: oklch(0.13 0.028 261.692);
    /* ... copy ALL your other light mode variables here ... */
  }

  .dark {
    --background: oklch(0.13 0.028 261.692);
    --foreground: oklch(0.985 0.002 247.839);
    /* ... copy ALL your other dark mode variables here ... */
  }

  /* Apply base styles */
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    font-family: 'Poppins', sans-serif;
  }
}

/*
  THE FIX: Define keyframes and animation utilities directly.
  By defining them outside a @theme block, we ensure they are always included in the final CSS.
*/
@keyframes fade-in-down {
  '0%': { opacity: '0', transform: 'translateY(-10px)' };
  '100%': { opacity: '1', transform: 'translateY(0)' };
}
@keyframes fade-in-up {
  '0%': { opacity: '0', transform: 'translateY(10px)' };
  '100%': { opacity: '1', transform: 'translateY(0)' };
}
@keyframes fade-in {
  '0%': { opacity: '0' };
  '100%': { opacity: '1' };
}

/* 
  We will then need to add these animation classes to our Tailwind config.
  If you are running config-free, we can also use CSS classes.
  For now, let's use the simplest approach that works with v4.
*/
.animate-fade-in-down { animation: fade-in-down 0.5s ease-out; }
.animate-fade-in-up { animation: fade-in-up 0.5s ease-out; }
.animate-fade-in { animation: fade-in 0.5s ease-out; }